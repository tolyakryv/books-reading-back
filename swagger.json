{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "BooksReading API docs",
    "description": "API documentation for GoIT final team project 'BooksReading'",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://book-reading-08.herokuapp.com" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Book",
      "description": "Book endpoints"
    },
    {
      "name": "Train",
      "description": "Train endpoints"
    }
  ],

  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email is already in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email is wrong / Password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication",
        "responses": {
          "200": {
            "description": "Successful operation (redirect to front-end with name, email, access_token, refreshToken and sid in query). Then use GET /user/books",
            "content": {}
           }
        }
      }
    },
    "/api/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "responses": {
          "200": {
            "description": "Successful operation",
             "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },

    "/api/book/": {
      "post": {
        "tags": ["Book"],
        "summary": "Add new book to library",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Book's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Book"],
        "summary": "Get all books",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Book's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": ""
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    },
    "/api/book": {
      "patch": {
        "tags": ["Book"],
        "summary": "Add book's rating and resume",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "bookId",
            "description": "Book's id",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "description": "Book's resume object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResumeBookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeBookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body / Invalid 'bookId' / No token provided",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "403": {
            "description": "Book hasn't been finished yet",
            "content": {}
          },
          "404": {
            "description": "Invalid user / Invalid session",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["name", "email", "password", "confirmPassword"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Test",
            "minLength": 3,
            "maxLength": 100
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 10,
            "maxLength": 63
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6,
            "maxLength": 30
          },
          "confirmPassword": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6,
            "maxLength": 30
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Test"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "507f1f77bcf86cd799439011"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "minLength": 10,
            "maxLength": 63
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123",
            "minLength": 6,
            "maxLength": 30
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "refreshToken": {
            "type": "string",
            "description": "Session's refresh token (needed for /auth/refresh)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXB"
          },
          "sid": {
            "type": "string",
            "description": "Session's id (needed for /auth/refresh)",
            "example": "507f1f77bcf86cd799439010"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Test"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Test"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          }
        }
      },
      "AddBookRequest": {
        "required": ["title", "author", "publicDate", "amountPages"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Book of Five Rings",
            "description": "Book's title",
            "minLength": 1,
            "maxLength": 50
          },
          "author": {
            "type": "string",
            "example": "Miyamoto Musashi",
            "description": "Book's author",
            "minLength": 1,
            "maxLength": 50
          },
          "publicDate": {
            "type": "integer",
            "example": 1643,
            "description": "Book's publish year"
          },
          "amountPages": {
            "type": "integer",
            "example": 110,
            "minLength": 1,
            "description": "Book's total amount of pages",
            "minimum": 1,
            "maximum": 9999
          }
        }
      },
      "AddBookResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Book of Five Rings",
            "description": "Book's title"
          },
          "author": {
            "type": "string",
            "example": "Miyamoto Musashi",
            "description": "Book's author"
          },
          "publicDate": {
            "type": "integer",
            "example": 1643,
            "description": "Book's publish year"
          },
          "amountPages": {
            "type": "integer",
            "example": 110,
            "description": "Book's total amount of pages"
          },
          "_id": {
            "type": "string",
            "description": "Book's id",
            "example": "507f1f77bcf86cd799439013"
          }
        }
      },
      "GetBookResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "The Book of Five Rings",
            "description": "Book's title"
          },
          "author": {
            "type": "string",
            "example": "Miyamoto Musashi",
            "description": "Book's author"
          },
          "publicDate": {
            "type": "integer",
            "example": 1643,
            "description": "Book's publish year"
          },
          "amountPages": {
            "type": "integer",
            "example": 110,
            "description": "Book's total amount of pages"
          },
          "_id": {
            "type": "string",
            "description": "Book's id",
            "example": "507f1f77bcf86cd799439013"
          }
        }
      }
    }
  }
}
